/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_ROBOTO_PB_H_INCLUDED
#define PB_ROBOTO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _HeartbeatMsg {
    char dummy_field;
} HeartbeatMsg;

typedef struct _StopMovingMsg {
    char dummy_field;
} StopMovingMsg;

typedef struct _EncoderPositionMsg {
    int32_t left_tick;
    int32_t right_tick;
} EncoderPositionMsg;

typedef struct _LaserSensorMsg {
    uint32_t distance_front_left;
    uint32_t distance_front_right;
    uint32_t distance_back_left;
    uint32_t distance_back_right;
} LaserSensorMsg;

typedef struct _MotionLimitMsg {
    uint32_t translation_speed;
    uint32_t rotation_speed;
    uint32_t wheel_speed;
    uint32_t wheel_acceleration;
} MotionLimitMsg;

typedef struct _MoveWheelAtSpeedMsg {
    int32_t left_tick_per_sec;
    int32_t right_tick_per_sec;
} MoveWheelAtSpeedMsg;

typedef struct _MovementEndedMsg {
    bool blocked;
} MovementEndedMsg;

typedef struct _PIDConfigMsg {
    uint32_t pid_id;
    uint32_t kp;
    uint32_t ki;
    uint32_t kd;
} PIDConfigMsg;

typedef struct _PressureSensorMsg {
    bool on_left;
    bool on_center_left;
    bool on_center;
    bool on_center_right;
    bool on_right;
} PressureSensorMsg;

typedef struct _PumpAndValveMsg {
    uint32_t id;
    bool on;
} PumpAndValveMsg;

typedef struct _RotateMsg {
    int32_t ticks;
} RotateMsg;

typedef struct _ServoMsg {
    uint32_t id;
    int32_t angle;
} ServoMsg;

typedef struct _SetMotionControlModeMsg {
    bool speed;
    bool translation;
    bool rotation;
} SetMotionControlModeMsg;

typedef struct _TranslateMsg {
    int32_t ticks;
} TranslateMsg;

typedef struct _BusMessage {
    pb_size_t which_message_content;
    union {
        HeartbeatMsg heartbeat;
        StopMovingMsg stopMoving;
        MovementEndedMsg movementEnded;
        EncoderPositionMsg encoderPosition;
        PIDConfigMsg pidConfig;
        MotionLimitMsg motionLimit;
        SetMotionControlModeMsg setMotionControlMode;
        MoveWheelAtSpeedMsg moveWheelAtSpeed;
        TranslateMsg translate;
        RotateMsg rotate;
        ServoMsg servo;
        PumpAndValveMsg pumpAndValve;
        LaserSensorMsg laserSensor;
        PressureSensorMsg pressureSensor;
    } message_content;
} BusMessage;


/* Initializer values for message structs */
#define HeartbeatMsg_init_default                {0}
#define StopMovingMsg_init_default               {0}
#define MovementEndedMsg_init_default            {0}
#define EncoderPositionMsg_init_default          {0, 0}
#define MotionLimitMsg_init_default              {0, 0, 0, 0}
#define PIDConfigMsg_init_default                {0, 0, 0, 0}
#define SetMotionControlModeMsg_init_default     {0, 0, 0}
#define MoveWheelAtSpeedMsg_init_default         {0, 0}
#define TranslateMsg_init_default                {0}
#define RotateMsg_init_default                   {0}
#define ServoMsg_init_default                    {0, 0}
#define PumpAndValveMsg_init_default             {0, 0}
#define LaserSensorMsg_init_default              {0, 0, 0, 0}
#define PressureSensorMsg_init_default           {0, 0, 0, 0, 0}
#define BusMessage_init_default                  {0, {HeartbeatMsg_init_default}}
#define HeartbeatMsg_init_zero                   {0}
#define StopMovingMsg_init_zero                  {0}
#define MovementEndedMsg_init_zero               {0}
#define EncoderPositionMsg_init_zero             {0, 0}
#define MotionLimitMsg_init_zero                 {0, 0, 0, 0}
#define PIDConfigMsg_init_zero                   {0, 0, 0, 0}
#define SetMotionControlModeMsg_init_zero        {0, 0, 0}
#define MoveWheelAtSpeedMsg_init_zero            {0, 0}
#define TranslateMsg_init_zero                   {0}
#define RotateMsg_init_zero                      {0}
#define ServoMsg_init_zero                       {0, 0}
#define PumpAndValveMsg_init_zero                {0, 0}
#define LaserSensorMsg_init_zero                 {0, 0, 0, 0}
#define PressureSensorMsg_init_zero              {0, 0, 0, 0, 0}
#define BusMessage_init_zero                     {0, {HeartbeatMsg_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define EncoderPositionMsg_left_tick_tag         1
#define EncoderPositionMsg_right_tick_tag        2
#define LaserSensorMsg_distance_front_left_tag   1
#define LaserSensorMsg_distance_front_right_tag  2
#define LaserSensorMsg_distance_back_left_tag    3
#define LaserSensorMsg_distance_back_right_tag   4
#define MotionLimitMsg_translation_speed_tag     2
#define MotionLimitMsg_rotation_speed_tag        3
#define MotionLimitMsg_wheel_speed_tag           4
#define MotionLimitMsg_wheel_acceleration_tag    5
#define MoveWheelAtSpeedMsg_left_tick_per_sec_tag 1
#define MoveWheelAtSpeedMsg_right_tick_per_sec_tag 2
#define MovementEndedMsg_blocked_tag             1
#define PIDConfigMsg_pid_id_tag                  1
#define PIDConfigMsg_kp_tag                      6
#define PIDConfigMsg_ki_tag                      7
#define PIDConfigMsg_kd_tag                      8
#define PressureSensorMsg_on_left_tag            1
#define PressureSensorMsg_on_center_left_tag     2
#define PressureSensorMsg_on_center_tag          3
#define PressureSensorMsg_on_center_right_tag    4
#define PressureSensorMsg_on_right_tag           5
#define PumpAndValveMsg_id_tag                   1
#define PumpAndValveMsg_on_tag                   2
#define RotateMsg_ticks_tag                      1
#define ServoMsg_id_tag                          1
#define ServoMsg_angle_tag                       2
#define SetMotionControlModeMsg_speed_tag        1
#define SetMotionControlModeMsg_translation_tag  2
#define SetMotionControlModeMsg_rotation_tag     3
#define TranslateMsg_ticks_tag                   1
#define BusMessage_heartbeat_tag                 1
#define BusMessage_stopMoving_tag                2
#define BusMessage_movementEnded_tag             3
#define BusMessage_encoderPosition_tag           4
#define BusMessage_pidConfig_tag                 5
#define BusMessage_motionLimit_tag               6
#define BusMessage_setMotionControlMode_tag      7
#define BusMessage_moveWheelAtSpeed_tag          8
#define BusMessage_translate_tag                 9
#define BusMessage_rotate_tag                    10
#define BusMessage_servo_tag                     11
#define BusMessage_pumpAndValve_tag              12
#define BusMessage_laserSensor_tag               13
#define BusMessage_pressureSensor_tag            14

/* Struct field encoding specification for nanopb */
#define HeartbeatMsg_FIELDLIST(X, a) \

#define HeartbeatMsg_CALLBACK NULL
#define HeartbeatMsg_DEFAULT NULL

#define StopMovingMsg_FIELDLIST(X, a) \

#define StopMovingMsg_CALLBACK NULL
#define StopMovingMsg_DEFAULT NULL

#define MovementEndedMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     blocked,           1)
#define MovementEndedMsg_CALLBACK NULL
#define MovementEndedMsg_DEFAULT NULL

#define EncoderPositionMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, SINT32,   left_tick,         1) \
X(a, STATIC,   SINGULAR, SINT32,   right_tick,        2)
#define EncoderPositionMsg_CALLBACK NULL
#define EncoderPositionMsg_DEFAULT NULL

#define MotionLimitMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   translation_speed,   2) \
X(a, STATIC,   SINGULAR, UINT32,   rotation_speed,    3) \
X(a, STATIC,   SINGULAR, UINT32,   wheel_speed,       4) \
X(a, STATIC,   SINGULAR, UINT32,   wheel_acceleration,   5)
#define MotionLimitMsg_CALLBACK NULL
#define MotionLimitMsg_DEFAULT NULL

#define PIDConfigMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   pid_id,            1) \
X(a, STATIC,   SINGULAR, UINT32,   kp,                6) \
X(a, STATIC,   SINGULAR, UINT32,   ki,                7) \
X(a, STATIC,   SINGULAR, UINT32,   kd,                8)
#define PIDConfigMsg_CALLBACK NULL
#define PIDConfigMsg_DEFAULT NULL

#define SetMotionControlModeMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     speed,             1) \
X(a, STATIC,   SINGULAR, BOOL,     translation,       2) \
X(a, STATIC,   SINGULAR, BOOL,     rotation,          3)
#define SetMotionControlModeMsg_CALLBACK NULL
#define SetMotionControlModeMsg_DEFAULT NULL

#define MoveWheelAtSpeedMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, SINT32,   left_tick_per_sec,   1) \
X(a, STATIC,   SINGULAR, SINT32,   right_tick_per_sec,   2)
#define MoveWheelAtSpeedMsg_CALLBACK NULL
#define MoveWheelAtSpeedMsg_DEFAULT NULL

#define TranslateMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, SINT32,   ticks,             1)
#define TranslateMsg_CALLBACK NULL
#define TranslateMsg_DEFAULT NULL

#define RotateMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, SINT32,   ticks,             1)
#define RotateMsg_CALLBACK NULL
#define RotateMsg_DEFAULT NULL

#define ServoMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, STATIC,   SINGULAR, SINT32,   angle,             2)
#define ServoMsg_CALLBACK NULL
#define ServoMsg_DEFAULT NULL

#define PumpAndValveMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, STATIC,   SINGULAR, BOOL,     on,                2)
#define PumpAndValveMsg_CALLBACK NULL
#define PumpAndValveMsg_DEFAULT NULL

#define LaserSensorMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   distance_front_left,   1) \
X(a, STATIC,   SINGULAR, UINT32,   distance_front_right,   2) \
X(a, STATIC,   SINGULAR, UINT32,   distance_back_left,   3) \
X(a, STATIC,   SINGULAR, UINT32,   distance_back_right,   4)
#define LaserSensorMsg_CALLBACK NULL
#define LaserSensorMsg_DEFAULT NULL

#define PressureSensorMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     on_left,           1) \
X(a, STATIC,   SINGULAR, BOOL,     on_center_left,    2) \
X(a, STATIC,   SINGULAR, BOOL,     on_center,         3) \
X(a, STATIC,   SINGULAR, BOOL,     on_center_right,   4) \
X(a, STATIC,   SINGULAR, BOOL,     on_right,          5)
#define PressureSensorMsg_CALLBACK NULL
#define PressureSensorMsg_DEFAULT NULL

#define BusMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,heartbeat,message_content.heartbeat),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,stopMoving,message_content.stopMoving),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,movementEnded,message_content.movementEnded),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,encoderPosition,message_content.encoderPosition),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,pidConfig,message_content.pidConfig),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,motionLimit,message_content.motionLimit),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,setMotionControlMode,message_content.setMotionControlMode),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,moveWheelAtSpeed,message_content.moveWheelAtSpeed),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,translate,message_content.translate),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,rotate,message_content.rotate),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,servo,message_content.servo),  11) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,pumpAndValve,message_content.pumpAndValve),  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,laserSensor,message_content.laserSensor),  13) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,pressureSensor,message_content.pressureSensor),  14)
#define BusMessage_CALLBACK NULL
#define BusMessage_DEFAULT NULL
#define BusMessage_message_content_heartbeat_MSGTYPE HeartbeatMsg
#define BusMessage_message_content_stopMoving_MSGTYPE StopMovingMsg
#define BusMessage_message_content_movementEnded_MSGTYPE MovementEndedMsg
#define BusMessage_message_content_encoderPosition_MSGTYPE EncoderPositionMsg
#define BusMessage_message_content_pidConfig_MSGTYPE PIDConfigMsg
#define BusMessage_message_content_motionLimit_MSGTYPE MotionLimitMsg
#define BusMessage_message_content_setMotionControlMode_MSGTYPE SetMotionControlModeMsg
#define BusMessage_message_content_moveWheelAtSpeed_MSGTYPE MoveWheelAtSpeedMsg
#define BusMessage_message_content_translate_MSGTYPE TranslateMsg
#define BusMessage_message_content_rotate_MSGTYPE RotateMsg
#define BusMessage_message_content_servo_MSGTYPE ServoMsg
#define BusMessage_message_content_pumpAndValve_MSGTYPE PumpAndValveMsg
#define BusMessage_message_content_laserSensor_MSGTYPE LaserSensorMsg
#define BusMessage_message_content_pressureSensor_MSGTYPE PressureSensorMsg

extern const pb_msgdesc_t HeartbeatMsg_msg;
extern const pb_msgdesc_t StopMovingMsg_msg;
extern const pb_msgdesc_t MovementEndedMsg_msg;
extern const pb_msgdesc_t EncoderPositionMsg_msg;
extern const pb_msgdesc_t MotionLimitMsg_msg;
extern const pb_msgdesc_t PIDConfigMsg_msg;
extern const pb_msgdesc_t SetMotionControlModeMsg_msg;
extern const pb_msgdesc_t MoveWheelAtSpeedMsg_msg;
extern const pb_msgdesc_t TranslateMsg_msg;
extern const pb_msgdesc_t RotateMsg_msg;
extern const pb_msgdesc_t ServoMsg_msg;
extern const pb_msgdesc_t PumpAndValveMsg_msg;
extern const pb_msgdesc_t LaserSensorMsg_msg;
extern const pb_msgdesc_t PressureSensorMsg_msg;
extern const pb_msgdesc_t BusMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define HeartbeatMsg_fields &HeartbeatMsg_msg
#define StopMovingMsg_fields &StopMovingMsg_msg
#define MovementEndedMsg_fields &MovementEndedMsg_msg
#define EncoderPositionMsg_fields &EncoderPositionMsg_msg
#define MotionLimitMsg_fields &MotionLimitMsg_msg
#define PIDConfigMsg_fields &PIDConfigMsg_msg
#define SetMotionControlModeMsg_fields &SetMotionControlModeMsg_msg
#define MoveWheelAtSpeedMsg_fields &MoveWheelAtSpeedMsg_msg
#define TranslateMsg_fields &TranslateMsg_msg
#define RotateMsg_fields &RotateMsg_msg
#define ServoMsg_fields &ServoMsg_msg
#define PumpAndValveMsg_fields &PumpAndValveMsg_msg
#define LaserSensorMsg_fields &LaserSensorMsg_msg
#define PressureSensorMsg_fields &PressureSensorMsg_msg
#define BusMessage_fields &BusMessage_msg

/* Maximum encoded size of messages (where known) */
#define HeartbeatMsg_size                        0
#define StopMovingMsg_size                       0
#define MovementEndedMsg_size                    2
#define EncoderPositionMsg_size                  12
#define MotionLimitMsg_size                      24
#define PIDConfigMsg_size                        24
#define SetMotionControlModeMsg_size             6
#define MoveWheelAtSpeedMsg_size                 12
#define TranslateMsg_size                        6
#define RotateMsg_size                           6
#define ServoMsg_size                            12
#define PumpAndValveMsg_size                     8
#define LaserSensorMsg_size                      24
#define PressureSensorMsg_size                   10
#define BusMessage_size                          26

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
