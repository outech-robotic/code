# automatically generated by the FlatBuffers compiler, do not modify

# namespace: outech

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class WheelControlModeMsg(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsWheelControlModeMsg(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = WheelControlModeMsg()
        x.Init(buf, n + offset)
        return x

    # WheelControlModeMsg
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # WheelControlModeMsg
    def Speed(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # WheelControlModeMsg
    def Position(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def WheelControlModeMsgStart(builder): builder.StartObject(2)
def WheelControlModeMsgAddSpeed(builder, speed): builder.PrependBoolSlot(0, speed, 0)
def WheelControlModeMsgAddPosition(builder, position): builder.PrependBoolSlot(1, position, 0)
def WheelControlModeMsgEnd(builder): return builder.EndObject()
