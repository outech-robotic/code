/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_SRC_PROTO_OUTECH_PB_H_INCLUDED
#define PB_SRC_PROTO_OUTECH_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _src_HeartbeatMsg {
    char dummy_field;
} src_HeartbeatMsg;

typedef struct _src_StopMovingMsg {
    char dummy_field;
} src_StopMovingMsg;

typedef struct _src_EncoderPositionMsg {
    int32_t left_tick;
    int32_t right_tick;
} src_EncoderPositionMsg;

typedef struct _src_LaserSensorMsg {
    uint32_t distance_front_left;
    uint32_t distance_front_right;
    uint32_t distance_back_left;
    uint32_t distance_back_right;
} src_LaserSensorMsg;

typedef struct _src_MotionLimitMsg {
    uint32_t translation_speed;
    uint32_t rotation_speed;
    uint32_t wheel_speed;
    uint32_t wheel_acceleration;
} src_MotionLimitMsg;

typedef struct _src_MoveWheelAtSpeedMsg {
    int32_t left_tick_per_sec;
    int32_t right_tick_per_sec;
} src_MoveWheelAtSpeedMsg;

typedef struct _src_MovementEndedMsg {
    bool blocked;
} src_MovementEndedMsg;

typedef struct _src_PIDConfigMsg {
    uint32_t pid_id;
    uint32_t kp;
    uint32_t ki;
    uint32_t kd;
} src_PIDConfigMsg;

typedef struct _src_PressureSensorMsg {
    bool on_left;
    bool on_center_left;
    bool on_center;
    bool on_center_right;
    bool on_right;
} src_PressureSensorMsg;

typedef struct _src_PumpAndValveMsg {
    uint32_t id;
    bool on;
} src_PumpAndValveMsg;

typedef struct _src_RotateMsg {
    int32_t ticks;
} src_RotateMsg;

typedef struct _src_ServoMsg {
    uint32_t id;
    int32_t angle;
} src_ServoMsg;

typedef struct _src_SetMotionControlModeMsg {
    bool speed;
    bool translation;
    bool rotation;
} src_SetMotionControlModeMsg;

typedef struct _src_TranslateMsg {
    int32_t ticks;
} src_TranslateMsg;

typedef struct _src_BusMessage {
    pb_size_t which_message_content;
    union {
        src_HeartbeatMsg heartbeat;
        src_StopMovingMsg stopMoving;
        src_MovementEndedMsg movementEnded;
        src_EncoderPositionMsg encoderPosition;
        src_PIDConfigMsg pidConfig;
        src_MotionLimitMsg motionLimit;
        src_SetMotionControlModeMsg setMotionControlMode;
        src_MoveWheelAtSpeedMsg moveWheelAtSpeed;
        src_TranslateMsg translate;
        src_RotateMsg rotate;
        src_ServoMsg servo;
        src_PumpAndValveMsg pumpAndValve;
        src_LaserSensorMsg laserSensor;
        src_PressureSensorMsg pressureSensor;
    } message_content;
} src_BusMessage;


/* Initializer values for message structs */
#define src_HeartbeatMsg_init_default            {0}
#define src_StopMovingMsg_init_default           {0}
#define src_MovementEndedMsg_init_default        {0}
#define src_EncoderPositionMsg_init_default      {0, 0}
#define src_MotionLimitMsg_init_default          {0, 0, 0, 0}
#define src_PIDConfigMsg_init_default            {0, 0, 0, 0}
#define src_SetMotionControlModeMsg_init_default {0, 0, 0}
#define src_MoveWheelAtSpeedMsg_init_default     {0, 0}
#define src_TranslateMsg_init_default            {0}
#define src_RotateMsg_init_default               {0}
#define src_ServoMsg_init_default                {0, 0}
#define src_PumpAndValveMsg_init_default         {0, 0}
#define src_LaserSensorMsg_init_default          {0, 0, 0, 0}
#define src_PressureSensorMsg_init_default       {0, 0, 0, 0, 0}
#define src_BusMessage_init_default              {0, {src_HeartbeatMsg_init_default}}
#define src_HeartbeatMsg_init_zero               {0}
#define src_StopMovingMsg_init_zero              {0}
#define src_MovementEndedMsg_init_zero           {0}
#define src_EncoderPositionMsg_init_zero         {0, 0}
#define src_MotionLimitMsg_init_zero             {0, 0, 0, 0}
#define src_PIDConfigMsg_init_zero               {0, 0, 0, 0}
#define src_SetMotionControlModeMsg_init_zero    {0, 0, 0}
#define src_MoveWheelAtSpeedMsg_init_zero        {0, 0}
#define src_TranslateMsg_init_zero               {0}
#define src_RotateMsg_init_zero                  {0}
#define src_ServoMsg_init_zero                   {0, 0}
#define src_PumpAndValveMsg_init_zero            {0, 0}
#define src_LaserSensorMsg_init_zero             {0, 0, 0, 0}
#define src_PressureSensorMsg_init_zero          {0, 0, 0, 0, 0}
#define src_BusMessage_init_zero                 {0, {src_HeartbeatMsg_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define src_EncoderPositionMsg_left_tick_tag     1
#define src_EncoderPositionMsg_right_tick_tag    2
#define src_LaserSensorMsg_distance_front_left_tag 1
#define src_LaserSensorMsg_distance_front_right_tag 2
#define src_LaserSensorMsg_distance_back_left_tag 3
#define src_LaserSensorMsg_distance_back_right_tag 4
#define src_MotionLimitMsg_translation_speed_tag 2
#define src_MotionLimitMsg_rotation_speed_tag    3
#define src_MotionLimitMsg_wheel_speed_tag       4
#define src_MotionLimitMsg_wheel_acceleration_tag 5
#define src_MoveWheelAtSpeedMsg_left_tick_per_sec_tag 1
#define src_MoveWheelAtSpeedMsg_right_tick_per_sec_tag 2
#define src_MovementEndedMsg_blocked_tag         1
#define src_PIDConfigMsg_pid_id_tag              1
#define src_PIDConfigMsg_kp_tag                  6
#define src_PIDConfigMsg_ki_tag                  7
#define src_PIDConfigMsg_kd_tag                  8
#define src_PressureSensorMsg_on_left_tag        1
#define src_PressureSensorMsg_on_center_left_tag 2
#define src_PressureSensorMsg_on_center_tag      3
#define src_PressureSensorMsg_on_center_right_tag 4
#define src_PressureSensorMsg_on_right_tag       5
#define src_PumpAndValveMsg_id_tag               1
#define src_PumpAndValveMsg_on_tag               2
#define src_RotateMsg_ticks_tag                  1
#define src_ServoMsg_id_tag                      1
#define src_ServoMsg_angle_tag                   2
#define src_SetMotionControlModeMsg_speed_tag    1
#define src_SetMotionControlModeMsg_translation_tag 2
#define src_SetMotionControlModeMsg_rotation_tag 3
#define src_TranslateMsg_ticks_tag               1
#define src_BusMessage_heartbeat_tag             1
#define src_BusMessage_stopMoving_tag            2
#define src_BusMessage_movementEnded_tag         3
#define src_BusMessage_encoderPosition_tag       4
#define src_BusMessage_pidConfig_tag             5
#define src_BusMessage_motionLimit_tag           6
#define src_BusMessage_setMotionControlMode_tag  7
#define src_BusMessage_moveWheelAtSpeed_tag      8
#define src_BusMessage_translate_tag             9
#define src_BusMessage_rotate_tag                10
#define src_BusMessage_servo_tag                 11
#define src_BusMessage_pumpAndValve_tag          12
#define src_BusMessage_laserSensor_tag           13
#define src_BusMessage_pressureSensor_tag        14

/* Struct field encoding specification for nanopb */
#define src_HeartbeatMsg_FIELDLIST(X, a) \

#define src_HeartbeatMsg_CALLBACK NULL
#define src_HeartbeatMsg_DEFAULT NULL

#define src_StopMovingMsg_FIELDLIST(X, a) \

#define src_StopMovingMsg_CALLBACK NULL
#define src_StopMovingMsg_DEFAULT NULL

#define src_MovementEndedMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     blocked,           1)
#define src_MovementEndedMsg_CALLBACK NULL
#define src_MovementEndedMsg_DEFAULT NULL

#define src_EncoderPositionMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, SINT32,   left_tick,         1) \
X(a, STATIC,   SINGULAR, SINT32,   right_tick,        2)
#define src_EncoderPositionMsg_CALLBACK NULL
#define src_EncoderPositionMsg_DEFAULT NULL

#define src_MotionLimitMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   translation_speed,   2) \
X(a, STATIC,   SINGULAR, UINT32,   rotation_speed,    3) \
X(a, STATIC,   SINGULAR, UINT32,   wheel_speed,       4) \
X(a, STATIC,   SINGULAR, UINT32,   wheel_acceleration,   5)
#define src_MotionLimitMsg_CALLBACK NULL
#define src_MotionLimitMsg_DEFAULT NULL

#define src_PIDConfigMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   pid_id,            1) \
X(a, STATIC,   SINGULAR, UINT32,   kp,                6) \
X(a, STATIC,   SINGULAR, UINT32,   ki,                7) \
X(a, STATIC,   SINGULAR, UINT32,   kd,                8)
#define src_PIDConfigMsg_CALLBACK NULL
#define src_PIDConfigMsg_DEFAULT NULL

#define src_SetMotionControlModeMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     speed,             1) \
X(a, STATIC,   SINGULAR, BOOL,     translation,       2) \
X(a, STATIC,   SINGULAR, BOOL,     rotation,          3)
#define src_SetMotionControlModeMsg_CALLBACK NULL
#define src_SetMotionControlModeMsg_DEFAULT NULL

#define src_MoveWheelAtSpeedMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, SINT32,   left_tick_per_sec,   1) \
X(a, STATIC,   SINGULAR, SINT32,   right_tick_per_sec,   2)
#define src_MoveWheelAtSpeedMsg_CALLBACK NULL
#define src_MoveWheelAtSpeedMsg_DEFAULT NULL

#define src_TranslateMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, SINT32,   ticks,             1)
#define src_TranslateMsg_CALLBACK NULL
#define src_TranslateMsg_DEFAULT NULL

#define src_RotateMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, SINT32,   ticks,             1)
#define src_RotateMsg_CALLBACK NULL
#define src_RotateMsg_DEFAULT NULL

#define src_ServoMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, STATIC,   SINGULAR, SINT32,   angle,             2)
#define src_ServoMsg_CALLBACK NULL
#define src_ServoMsg_DEFAULT NULL

#define src_PumpAndValveMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, STATIC,   SINGULAR, BOOL,     on,                2)
#define src_PumpAndValveMsg_CALLBACK NULL
#define src_PumpAndValveMsg_DEFAULT NULL

#define src_LaserSensorMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   distance_front_left,   1) \
X(a, STATIC,   SINGULAR, UINT32,   distance_front_right,   2) \
X(a, STATIC,   SINGULAR, UINT32,   distance_back_left,   3) \
X(a, STATIC,   SINGULAR, UINT32,   distance_back_right,   4)
#define src_LaserSensorMsg_CALLBACK NULL
#define src_LaserSensorMsg_DEFAULT NULL

#define src_PressureSensorMsg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     on_left,           1) \
X(a, STATIC,   SINGULAR, BOOL,     on_center_left,    2) \
X(a, STATIC,   SINGULAR, BOOL,     on_center,         3) \
X(a, STATIC,   SINGULAR, BOOL,     on_center_right,   4) \
X(a, STATIC,   SINGULAR, BOOL,     on_right,          5)
#define src_PressureSensorMsg_CALLBACK NULL
#define src_PressureSensorMsg_DEFAULT NULL

#define src_BusMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,heartbeat,message_content.heartbeat),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,stopMoving,message_content.stopMoving),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,movementEnded,message_content.movementEnded),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,encoderPosition,message_content.encoderPosition),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,pidConfig,message_content.pidConfig),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,motionLimit,message_content.motionLimit),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,setMotionControlMode,message_content.setMotionControlMode),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,moveWheelAtSpeed,message_content.moveWheelAtSpeed),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,translate,message_content.translate),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,rotate,message_content.rotate),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,servo,message_content.servo),  11) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,pumpAndValve,message_content.pumpAndValve),  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,laserSensor,message_content.laserSensor),  13) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message_content,pressureSensor,message_content.pressureSensor),  14)
#define src_BusMessage_CALLBACK NULL
#define src_BusMessage_DEFAULT NULL
#define src_BusMessage_message_content_heartbeat_MSGTYPE src_HeartbeatMsg
#define src_BusMessage_message_content_stopMoving_MSGTYPE src_StopMovingMsg
#define src_BusMessage_message_content_movementEnded_MSGTYPE src_MovementEndedMsg
#define src_BusMessage_message_content_encoderPosition_MSGTYPE src_EncoderPositionMsg
#define src_BusMessage_message_content_pidConfig_MSGTYPE src_PIDConfigMsg
#define src_BusMessage_message_content_motionLimit_MSGTYPE src_MotionLimitMsg
#define src_BusMessage_message_content_setMotionControlMode_MSGTYPE src_SetMotionControlModeMsg
#define src_BusMessage_message_content_moveWheelAtSpeed_MSGTYPE src_MoveWheelAtSpeedMsg
#define src_BusMessage_message_content_translate_MSGTYPE src_TranslateMsg
#define src_BusMessage_message_content_rotate_MSGTYPE src_RotateMsg
#define src_BusMessage_message_content_servo_MSGTYPE src_ServoMsg
#define src_BusMessage_message_content_pumpAndValve_MSGTYPE src_PumpAndValveMsg
#define src_BusMessage_message_content_laserSensor_MSGTYPE src_LaserSensorMsg
#define src_BusMessage_message_content_pressureSensor_MSGTYPE src_PressureSensorMsg

extern const pb_msgdesc_t src_HeartbeatMsg_msg;
extern const pb_msgdesc_t src_StopMovingMsg_msg;
extern const pb_msgdesc_t src_MovementEndedMsg_msg;
extern const pb_msgdesc_t src_EncoderPositionMsg_msg;
extern const pb_msgdesc_t src_MotionLimitMsg_msg;
extern const pb_msgdesc_t src_PIDConfigMsg_msg;
extern const pb_msgdesc_t src_SetMotionControlModeMsg_msg;
extern const pb_msgdesc_t src_MoveWheelAtSpeedMsg_msg;
extern const pb_msgdesc_t src_TranslateMsg_msg;
extern const pb_msgdesc_t src_RotateMsg_msg;
extern const pb_msgdesc_t src_ServoMsg_msg;
extern const pb_msgdesc_t src_PumpAndValveMsg_msg;
extern const pb_msgdesc_t src_LaserSensorMsg_msg;
extern const pb_msgdesc_t src_PressureSensorMsg_msg;
extern const pb_msgdesc_t src_BusMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define src_HeartbeatMsg_fields &src_HeartbeatMsg_msg
#define src_StopMovingMsg_fields &src_StopMovingMsg_msg
#define src_MovementEndedMsg_fields &src_MovementEndedMsg_msg
#define src_EncoderPositionMsg_fields &src_EncoderPositionMsg_msg
#define src_MotionLimitMsg_fields &src_MotionLimitMsg_msg
#define src_PIDConfigMsg_fields &src_PIDConfigMsg_msg
#define src_SetMotionControlModeMsg_fields &src_SetMotionControlModeMsg_msg
#define src_MoveWheelAtSpeedMsg_fields &src_MoveWheelAtSpeedMsg_msg
#define src_TranslateMsg_fields &src_TranslateMsg_msg
#define src_RotateMsg_fields &src_RotateMsg_msg
#define src_ServoMsg_fields &src_ServoMsg_msg
#define src_PumpAndValveMsg_fields &src_PumpAndValveMsg_msg
#define src_LaserSensorMsg_fields &src_LaserSensorMsg_msg
#define src_PressureSensorMsg_fields &src_PressureSensorMsg_msg
#define src_BusMessage_fields &src_BusMessage_msg

/* Maximum encoded size of messages (where known) */
#define src_HeartbeatMsg_size                    0
#define src_StopMovingMsg_size                   0
#define src_MovementEndedMsg_size                2
#define src_EncoderPositionMsg_size              12
#define src_MotionLimitMsg_size                  24
#define src_PIDConfigMsg_size                    24
#define src_SetMotionControlModeMsg_size         6
#define src_MoveWheelAtSpeedMsg_size             12
#define src_TranslateMsg_size                    6
#define src_RotateMsg_size                       6
#define src_ServoMsg_size                        12
#define src_PumpAndValveMsg_size                 8
#define src_LaserSensorMsg_size                  24
#define src_PressureSensorMsg_size               10
#define src_BusMessage_size                      26

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
