syntax = "proto3";

message HeartbeatMsg {
}

message StopMovingMsg {
}

message MovementEndedMsg {
  bool blocked = 1;
}

message EncoderPositionMsg {
  sint32 left_tick = 1;
  sint32 right_tick = 2;
}

message PIDCoefficients {
  uint32 kp = 1;
  uint32 ki = 2;
  uint32 kd = 3;
}

message PIDConfigMsg {
  PIDCoefficients pid_speed_left = 1;
  PIDCoefficients pid_speed_right = 2;
  PIDCoefficients pid_position_left = 3;
  PIDCoefficients pid_position_right = 4;
}

message WheelControlModeMsg {
  bool speed = 1;
  bool position = 2;
}

message WheelTolerancesMsg {
  uint32 ticks_left = 1;
  uint32 ticks_right = 2;
}

message MoveWheelAtSpeedMsg {
  sint32 left_tick_per_sec = 1;
  sint32 right_tick_per_sec = 2;
}

message WheelPositionTargetMsg {
  sint32 tick_left = 1;
  sint32 tick_right = 2;
}

message TranslateMsg {
  sint32 ticks = 1;
}

message RotateMsg {
  sint32 ticks = 1;
}

message ServoMsg {
  uint32 id = 1;
  sint32 angle = 2;
}

message PumpAndValveMsg {
  uint32 id = 1;
  bool on = 2;
}

message LaserSensorMsg {
  uint32 distance_front_left = 1;
  uint32 distance_front_right = 2;
  uint32 distance_back_left = 3;
  uint32 distance_back_right = 4;
}

message PressureSensorMsg {
  bool on_left = 1;
  bool on_center_left = 2;
  bool on_center = 3;
  bool on_center_right = 4;
  bool on_right = 5;
}


message DebugLog {
  string content = 1;
}


message BusMessage {
  oneof message_content {
    HeartbeatMsg heartbeat = 1;
    StopMovingMsg stopMoving = 2;
    MovementEndedMsg movementEnded = 3;
    EncoderPositionMsg encoderPosition = 4;
    PIDConfigMsg pidConfig = 5;
    WheelControlModeMsg wheelControlMode = 6;
    WheelPositionTargetMsg wheelPositionTarget = 7;
    MoveWheelAtSpeedMsg moveWheelAtSpeed = 8;
    TranslateMsg translate = 9;
    RotateMsg rotate = 10;
    ServoMsg servo = 11;
    PumpAndValveMsg pumpAndValve = 12;
    LaserSensorMsg laserSensor = 13;
    PressureSensorMsg pressureSensor = 14;
    DebugLog debugLog = 15;
    WheelTolerancesMsg wheelTolerances= 16;
  }
}
